{"version":3,"file":"static/js/958.484e3ae8.chunk.js","mappings":"6JAGA,MA8HA,EA9HiBA,IAGV,IAHW,MAChBC,EAAK,mBACLC,GAAqB,GACtBF,EACC,MAAMG,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAASD,EAAAA,EAAAA,QAAO,OACfE,EAAaC,IAAkBC,EAAAA,EAAAA,UAASN,IACxCO,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,MAuBvCG,EAAcA,CAACC,EAAGC,KACtBD,EAAEE,kBACF,MAAMC,EAAOH,EAAEI,cACfN,EAAcG,GAEVP,IAAgBO,GA1BOI,EAACC,EAASL,KACrC,GAAKV,EAAagB,SAAYd,EAAOc,eAGvBC,IAAVP,GACFN,EAAeM,GAIbK,GAAS,CACX,MAAMG,EAASC,SAASC,cAAc,QACtCF,EAAOG,UAAY,SACnBN,EAAQO,YAAYJ,GAGpBK,WAAW,KACTL,EAAOM,UACN,IACL,GASEV,CAAqBF,EAAMF,IAIzBe,EAAkBhB,IACtBA,EAAEE,kBACFJ,EAAc,OAGVmB,EAAejB,IACnB,MAAMkB,EAAOlB,EAAEI,cAAce,aAAa,aACtCD,IAAME,OAAOC,SAASH,KAAOA,IAG7BI,EAAiBtB,IACrB,GAAc,UAAVA,EAAEuB,KAA6B,MAAVvB,EAAEuB,IAAa,CACtCvB,EAAEwB,iBACF,MAAMN,EAAOlB,EAAEI,cAAce,aAAa,aACtCD,IAAME,OAAOC,SAASH,KAAOA,EACnC,GAoCF,OA9BAO,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQhB,SAASC,cAAc,SAwBrC,OAvBAe,EAAMC,YAAW,gdAqBjBjB,SAASkB,KAAKf,YAAYa,GAEnB,KACLhB,SAASkB,KAAKC,YAAYH,KAE3B,KAGDI,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,sBAAsBmB,IAAKxC,EAAayC,UACrDF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAIC,IAAKtC,EAAQmB,UAAU,YAAWoB,SACnC3C,EAAM4C,IAAI,CAACC,EAAMjC,KAChB6B,EAAAA,EAAAA,KAAA,MAEElB,UAAS,YAAAuB,OAActC,IAAeI,EAAQ,SAAW,IACzDmC,aAAepC,GAAMD,EAAYC,EAAGC,GACpCoC,aAAcrB,EACdsB,QAASrB,EACTsB,UAAWjB,EACXkB,SAAS,IACT,YAAWN,EAAKhB,KAChBQ,MAAO,CACLe,OAAQ,UACRC,SAAU,WACVC,SAAU,SACVC,WAAY,kDACZC,WAAY,8BACZC,OAAQ,GACRd,UAEFe,EAAAA,EAAAA,MAAA,QAAMnC,UAAU,WAAUoB,SAAA,CACvBE,EAAKc,OACNlB,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,sBAnBbX,U","sources":["components/GooeyNav/GooeyNav.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport './GooeyNav.css';\n\nconst GooeyNav = ({\n  items,\n  initialActiveIndex = -1\n}) => {\n  const containerRef = useRef(null);\n  const navRef = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(initialActiveIndex);\n  const [hoverIndex, setHoverIndex] = useState(null);\n\n  const updateEffectPosition = (element, index) => {\n    if (!containerRef.current || !navRef.current) return;\n    \n    // Update active index for visual feedback\n    if (index !== undefined) {\n      setActiveIndex(index);\n    }\n    \n    // Add ripple effect on hover\n    if (element) {\n      const ripple = document.createElement('span');\n      ripple.className = 'ripple';\n      element.appendChild(ripple);\n      \n      // Remove ripple after animation\n      setTimeout(() => {\n        ripple.remove();\n      }, 600);\n    }\n  };\n\n  const handleHover = (e, index) => {\n    e.stopPropagation(); // Prevent event bubbling\n    const liEl = e.currentTarget;\n    setHoverIndex(index);\n    // Only update effect position if not already active\n    if (activeIndex !== index) {\n      updateEffectPosition(liEl, index);\n    }\n  };\n  \n  const handleHoverEnd = (e) => {\n    e.stopPropagation();\n    setHoverIndex(null);\n  };\n\n  const handleClick = (e) => {\n    const href = e.currentTarget.getAttribute('data-href');\n    if (href) window.location.href = href;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      const href = e.currentTarget.getAttribute('data-href');\n      if (href) window.location.href = href;\n    }\n  };\n\n  // Remove the handleAnimationEnd function as it's no longer needed for hover behavior\n\n  // Add ripple effect styles dynamically\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes ripple {\n        to {\n          transform: scale(4);\n          opacity: 0;\n        }\n      }\n      \n      .ripple {\n        position: absolute;\n        border-radius: 50%;\n        background-color: rgba(255, 255, 255, 0.1);\n        width: 20px;\n        height: 20px;\n        margin-top: -10px;\n        margin-left: -10px;\n        animation: ripple 0.6s linear;\n        pointer-events: none;\n        z-index: 1;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n  return (\n    <div className=\"gooey-nav-container\" ref={containerRef}>\n      <nav>\n        <ul ref={navRef} className=\"gooey-nav\">\n          {items.map((item, index) => (\n            <li\n              key={index}\n              className={`nav-item ${hoverIndex === index ? 'active' : ''}`}\n              onMouseEnter={(e) => handleHover(e, index)}\n              onMouseLeave={handleHoverEnd}\n              onClick={handleClick}\n              onKeyDown={handleKeyDown}\n              tabIndex=\"0\"\n              data-href={item.href}\n              style={{ \n                cursor: 'pointer',\n                position: 'relative',\n                overflow: 'hidden',\n                transition: 'transform 0.3s ease, background-color 0.3s ease',\n                willChange: 'transform, background-color',\n                zIndex: 1\n              }}\n            >\n              <span className=\"nav-text\">\n                {item.label}\n                <span className=\"nav-underline\"></span>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default GooeyNav;\n"],"names":["_ref","items","initialActiveIndex","containerRef","useRef","navRef","activeIndex","setActiveIndex","useState","hoverIndex","setHoverIndex","handleHover","e","index","stopPropagation","liEl","currentTarget","updateEffectPosition","element","current","undefined","ripple","document","createElement","className","appendChild","setTimeout","remove","handleHoverEnd","handleClick","href","getAttribute","window","location","handleKeyDown","key","preventDefault","useEffect","style","textContent","head","removeChild","_jsx","ref","children","map","item","concat","onMouseEnter","onMouseLeave","onClick","onKeyDown","tabIndex","cursor","position","overflow","transition","willChange","zIndex","_jsxs","label"],"sourceRoot":""}